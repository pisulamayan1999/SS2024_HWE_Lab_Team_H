library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

-- Entity declaration
entity JK_FlipFlop is
    Port (
        J   : in  STD_LOGIC;
        K   : in  STD_LOGIC;
        CLK : in  STD_LOGIC;
        Q   : out STD_LOGIC;
        nQ  : out STD_LOGIC
    );
end JK_FlipFlop;

-- Architecture body
architecture Behavioral of JK_FlipFlop is
    signal Q_int, nQ_int : STD_LOGIC;
begin
    -- Process block to handle the JK flip-flop functionality
    process (CLK)
    begin
        if rising_edge(CLK) then
            case (J & K) is
                when "00" =>
                    -- No change
                    Q_int <= Q_int;
                    nQ_int <= nQ_int;
                when "01" =>
                    -- Reset
                    Q_int <= '0';
                    nQ_int <= '1';
                when "10" =>
                    -- Set
                    Q_int <= '1';
                    nQ_int <= '0';
                when "11" =>
                    -- Toggle
                    Q_int <= not Q_int;
                    nQ_int <= not nQ_int;
                when others =>
                    -- Invalid case, default action
                    Q_int <= Q_int;
                    nQ_int <= nQ_int;
            end case;
        end if;
    end process;

    -- Output assignments
    Q <= Q_int;
    nQ <= nQ_int;
end Behavioral;
