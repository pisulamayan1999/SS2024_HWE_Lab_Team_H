library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

entity tb_UpDownCounter is
end tb_UpDownCounter;

architecture Behavioral of tb_UpDownCounter is
    signal CLK : STD_LOGIC := '0';
    signal RST : STD_LOGIC := '0';
    signal EN : STD_LOGIC := '0';
    signal UpDown : STD_LOGIC := '0';
    signal Q : STD_LOGIC_VECTOR (3 downto 0);

    component UpDownCounter is
        Port (
            CLK : in STD_LOGIC;
            RST : in STD_LOGIC;
            EN : in STD_LOGIC;
            UpDown : in STD_LOGIC;
            Q : out STD_LOGIC_VECTOR (3 downto 0)
        );
    end component;
begin
    uut: UpDownCounter Port Map (
        CLK => CLK,
        RST => RST,
        EN => EN,
        UpDown => UpDown,
        Q => Q
    );

    -- Clock generation
    CLK_process :process
    begin
        CLK <= '0';
        wait for 10 ns;
        CLK <= '1';
        wait for 10 ns;
    end process;

    -- Test process
    stim_proc: process
    begin
        -- Reset the counter
        RST <= '1';
        wait for 20 ns;
        RST <= '0';

        -- Enable and count up
        EN <= '1';
        UpDown <= '1';
        wait for 200 ns;

        -- Count down
        UpDown <= '0';
        wait for 200 ns;

        -- Disable the counter
        EN <= '0';
        wait for 200 ns;

        -- End simulation
        wait;
    end process;
end Behavioral;
