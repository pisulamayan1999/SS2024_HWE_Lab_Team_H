library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_ARITH.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;

entity clock_divider is
    generic (
        N : integer := 2  -- Default divide factor is 2^2 = 4
    );
    port (
        CLK    : in  std_logic;
        CLK_N  : out std_logic
    );
end clock_divider;

architecture Behavioral of clock_divider is
    signal counter : std_logic_vector(N-1 downto 0) := (others => '0');
    signal clk_out : std_logic := '0';
begin

    process(CLK)
    begin
        if rising_edge(CLK) then
            if counter = (2**N - 1) then
                counter <= (others => '0');
                clk_out <= not clk_out;
            else
                counter <= counter + 1;
            end if;
        end if;
    end process;

    CLK_N <= clk_out;

end Behavioral;
