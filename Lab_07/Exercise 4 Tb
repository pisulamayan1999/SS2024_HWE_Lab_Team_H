library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

entity Counter_tb is
end Counter_tb;

architecture sim of Counter_tb is
    signal CLK : STD_LOGIC := '0';
    signal RST : STD_LOGIC := '0';
    signal EN  : STD_LOGIC := '0';
    signal Q   : STD_LOGIC_VECTOR(3 downto 0); -- 4-bit counter output

    -- Clock period definition
    constant CLK_PERIOD : time := 10 ns;
    
    -- Instantiate the Unit Under Test (UUT)
    component Counter is
        Port (
            CLK : in STD_LOGIC;
            RST : in STD_LOGIC;
            EN  : in STD_LOGIC;
            Q   : out STD_LOGIC_VECTOR(3 downto 0)
        );
    end component;

begin
    -- Clock generation
    CLK_process : process
    begin
        CLK <= '0';
        wait for CLK_PERIOD/2;
        CLK <= '1';
        wait for CLK_PERIOD/2;
    end process;

    -- Stimulus process
    stimulus : process
    begin
        -- Reset the counter
        RST <= '1';
        EN  <= '0';
        wait for 20 ns;
        RST <= '0';
        
        -- Enable counting
        EN  <= '1';
        wait for 100 ns;

        -- Disable counting
        EN  <= '0';
        wait for 40 ns;
        
        -- Re-enable counting
        EN  <= '1';
        wait for 100 ns;

        -- Finish simulation
        wait;
    end process;

    -- Instantiate the counter
    uut: Counter
        Port map (
            CLK => CLK,
            RST => RST,
            EN  => EN,
            Q   => Q
        );

end sim;
