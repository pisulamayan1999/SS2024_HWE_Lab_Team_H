library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_ARITH.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;

entity UpDownCounter is
    Port (
        CLK : in STD_LOGIC;
        RST : in STD_LOGIC;
        EN : in STD_LOGIC;
        UpDown : in STD_LOGIC;
        Q : out STD_LOGIC_VECTOR (3 downto 0)
    );
end UpDownCounter;

architecture Behavioral of UpDownCounter is
    signal count : STD_LOGIC_VECTOR (3 downto 0) := "0000";
begin
    process(CLK, RST)
    begin
        if RST = '1' then
            count <= "0000";
        elsif rising_edge(CLK) then
            if EN = '1' then
                if UpDown = '1' then
                    if count = "1001" then
                        count <= "0000";
                    else
                        count <= count + 1;
                    end if;
                else
                    if count = "0000" then
                        count <= "1001";
                    else
                        count <= count - 1;
                    end if;
                end if;
            end if;
        end if;
    end process;
    Q <= count;
end Behavioral;
