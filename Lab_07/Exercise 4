library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_ARITH.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;

entity Counter is
    Generic (N : integer := 4); -- Define the width of the counter
    Port (
        CLK : in STD_LOGIC;   -- Clock input
        RST : in STD_LOGIC;   -- Asynchronous Reset
        EN  : in STD_LOGIC;   -- Synchronous Enable
        Q   : out STD_LOGIC_VECTOR(N-1 downto 0)  -- Output counter value
    );
end Counter;

architecture Behavioral of Counter is
    signal cnt : STD_LOGIC_VECTOR(N-1 downto 0) := (others => '0');
begin
    process (CLK, RST)
    begin
        if RST = '1' then
            cnt <= (others => '0');
        elsif rising_edge(CLK) then
            if EN = '1' then
                cnt <= cnt + 1;
            end if;
        end if;
    end process;
    
    Q <= cnt;
end Behavioral;
