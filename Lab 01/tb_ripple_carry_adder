library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

entity tb_ripple_carry_adder is
end tb_ripple_carry_adder;

architecture Behavioral of tb_ripple_carry_adder is

    -- Component Declaration for the Unit Under Test (UUT)
    component ripple_carry_adder
        Port (
            a : in STD_LOGIC_VECTOR(3 downto 0);
            b : in STD_LOGIC_VECTOR(3 downto 0);
            cin : in STD_LOGIC;
            sum : out STD_LOGIC_VECTOR(3 downto 0);
            cout : out STD_LOGIC
        );
    end component;

    -- Inputs
    signal a : STD_LOGIC_VECTOR(3 downto 0) := (others => '0');
    signal b : STD_LOGIC_VECTOR(3 downto 0) := (others => '0');
    signal cin : STD_LOGIC := '0';

    -- Outputs
    signal sum : STD_LOGIC_VECTOR(3 downto 0);
    signal cout : STD_LOGIC;

begin

    -- Instantiate the Unit Under Test (UUT)
    uut: ripple_carry_adder Port Map (
        a => a,
        b => b,
        cin => cin,
        sum => sum,
        cout => cout
    );

    -- Stimulus process
    stim_proc: process
    begin
        -- Test case 1: 0000 + 0000 + 0
        a <= "0000"; b <= "0000"; cin <= '0';
        wait for 10 ns;

        -- Test case 2: 0001 + 0001 + 0
        a <= "0001"; b <= "0001"; cin <= '0';
        wait for 10 ns;

        -- Test case 3: 0010 + 0011 + 0
        a <= "0010"; b <= "0011"; cin <= '0';
        wait for 10 ns;

        -- Test case 4: 0110 + 0101 + 0
        a <= "0110"; b <= "0101"; cin <= '0';
        wait for 10 ns;

        -- Test case 5: 0111 + 0111 + 1
        a <= "0111"; b <= "0111"; cin <= '1';
        wait for 10 ns;

        -- Test case 6: 1111 + 1111 + 0
        a <= "1111"; b <= "1111"; cin <= '0';
        wait for 10 ns;

        -- Test case 7: 1010 + 0101 + 1
        a <= "1010"; b <= "0101"; cin <= '1';
        wait for 10 ns;

        -- Test case 8: 1001 + 0011 + 1
        a <= "1001"; b <= "0011"; cin <= '1';
        wait for 10 ns;

        -- Finish simulation
        wait;
    end process;

end Behavioral;
