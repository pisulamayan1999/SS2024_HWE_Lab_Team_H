library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;

entity tb_Binary_to_BCD is

end tb_Binary_to_BCD;

architecture behavior of tb_Binary_to_BCD is 
        component Binary_to_BCD
        Port ( binary_in : in  STD_LOGIC_VECTOR (3 downto 0);
               bcd_out   : out STD_LOGIC_VECTOR (7 downto 0));
    end component;

    signal binary_in : STD_LOGIC_VECTOR(3 downto 0) := (others => '0');

    signal bcd_out : STD_LOGIC_VECTOR(7 downto 0);

    begin
        uut: Binary_to_BCD Port Map (
            binary_in => binary_in,
            bcd_out => bcd_out
        );

    stimulus: process
    begin
        
        binary_in <= "0000"; -- 0
        wait for 100 ns;
        assert (bcd_out = "00000000")
            report "Test failed for input 0000" severity error;

       
        binary_in <= "0001"; -- 1
        wait for 100 ns;
        assert (bcd_out = "00000001")
            report "Test failed for input 0001" severity error;

        
        binary_in <= "0010"; -- 2
        wait for 100 ns;
        assert (bcd_out = "00000010")
            report "Test failed for input 0010" severity error;

        binary_in <= "0011"; wait for 100 ns;
        binary_in <= "0100"; wait for 100 ns;
        binary_in <= "0101"; wait for 100 ns;
        binary_in <= "0110"; wait for 100 ns;
        binary_in <= "0111"; wait for 100 ns;
        binary_in <= "1000"; wait for 100 ns;
        binary_in <= "1001"; wait for 100 ns;
        binary_in <= "1010"; wait for 100 ns;
        binary_in <= "1011"; wait for 100 ns;
        binary_in <= "1100"; wait for 100 ns;
        binary_in <= "1101"; wait for 100 ns;
        binary_in <= "1110"; wait for 100 ns;
        binary_in <= "1111"; -- 15
        wait for 100 ns;
        assert (bcd_out = "00011001")
            report "Test failed for input 1111" severity error;

        wait;
    end process;

end behavior;
