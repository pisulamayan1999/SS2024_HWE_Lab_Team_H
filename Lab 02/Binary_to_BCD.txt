library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_ARITH.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;

entity Binary_to_BCD is
    Port ( binary_in : in  STD_LOGIC_VECTOR (3 downto 0);
           bcd_out   : out STD_LOGIC_VECTOR (7 downto 0));
end Binary_to_BCD;

architecture Behavioral of Binary_to_BCD is

    signal bcd_tens : STD_LOGIC_VECTOR(3 downto 0) := "0000";
    signal bcd_units : STD_LOGIC_VECTOR(3 downto 0) := "0000";

begin
    process(binary_in)
    begin
        -- Initialize the BCD digits
        bcd_tens  <= "0000";
        bcd_units <= binary_in;

        -- Check and correct the units digit if it is above 9
        if bcd_units > "1001" then
            bcd_tens  <= bcd_tens + 1;
            bcd_units <= bcd_units - 10;
        end if;

        -- Combine the tens and units into the BCD output
        bcd_out <= bcd_tens & bcd_units;
    end process;

end Behavioral;
